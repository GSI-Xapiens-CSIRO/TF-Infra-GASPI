# --------------------------------------------------------------------------
#  Snapshot Policy
# --------------------------------------------------------------------------
# resource "aws_iam_policy" "gxc_developer_snapshot_policy" {
#   # provider  = aws.destination
#   name        = "opensearch_snapshot_developer_${var.workspace_env[local.env]}"
#   path        = "/"
#   description = "Snapshot Policy for Developer"
#   policy      = aws_s3_bucket_policy.main.policy
# }

# resource "aws_iam_policy" "gxc_administrator_snapshot_policy" {
#   # provider  = aws.destination
#   name        = "opensearch_snapshot_administrator_${var.workspace_env[local.env]}"
#   path        = "/"
#   description = "Snapshot Policy for Administrator"
#   policy      = aws_s3_bucket_policy.main.policy
# }

# resource "aws_iam_policy" "gxc_billing_snapshot_policy" {
#   # provider  = aws.destination
#   name        = "opensearch_snapshot_billing_${var.workspace_env[local.env]}"
#   path        = "/"
#   description = "Snapshot Policy for Billing"
#   policy      = aws_s3_bucket_policy.main.policy
# }

# --------------------------------------------------------------------------
#  Bind Group - Policy
# --------------------------------------------------------------------------
# Group: gxc-developer
# resource "aws_iam_group_policy_attachment" "gxc_policy_developer_custom" {
#   # provider = aws.destination
#   policy_arn = aws_iam_policy.gxc_developer_snapshot_policy.arn
#   group      = aws_iam_group.gxc_developer.name
# }

# Group: gxc-administrator
# resource "aws_iam_group_policy_attachment" "gxc_policy_administrator_custom" {
#   # provider = aws.destination
#   policy_arn = aws_iam_policy.gxc_administrator_snapshot_policy.arn
#   group      = aws_iam_group.gxc_administrator.name
# }

# Group: gxc-billing
# resource "aws_iam_group_policy_attachment" "gxc_policy_billing_custom" {
#   # provider = aws.destination
#   policy_arn = aws_iam_policy.gxc_billing_snapshot_policy.arn
#   group      = aws_iam_group.gxc_billing.name
# }

# --------------------------------------------------------------------------
#  OpenSearch Snapshot Role
# --------------------------------------------------------------------------
resource "aws_iam_role" "opensearch_snapshot_role" {
  name = "opensearch-snapshot-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "opensearch.amazonaws.com"
        }
      }
    ]
  })
}

# Create inline policy for the role
resource "aws_iam_role_policy" "opensearch_snapshot_policy" {
  name = "opensearch-snapshot-policy"
  role = aws_iam_role.opensearch_snapshot_role.id

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "s3:ListBucket",
          "s3:GetBucketLocation",
          "s3:ListBucketMultipartUploads",
          "s3:ListBucketVersions",
          "iam:PassRole"
        ]
        Effect = "Allow"
        Resource = [
          aws_s3_bucket.main.arn,
          aws_iam_role.opensearch_snapshot_role.arn,
          "${aws_s3_bucket.main.arn}",
        ]
      },
      {
        Effect = "Allow"
        Action = [
          "s3:ListBucket",
          "s3:GetObject",
          "s3:PutObject",
          "s3:DeleteObject",
          "s3:AbortMultipartUpload",
          "s3:ListMultipartUploadParts",
          "iam:PassRole"
        ]
        Resource = [
          aws_s3_bucket.main.arn,
          aws_iam_role.opensearch_snapshot_role.arn,
          "${aws_s3_bucket.main.arn}/*",
        ]
      },
      {
        Effect = "Allow",
        Action = [
          "iam:PassRole"
        ]
        Resource = "arn:aws:iam::${var.aws_account_id_destination}:role/opensearch-snapshot-role"
      },
    ]
  })
}

# --------------------------------------------------------------------------
#  IAM Policy to Allow PassRole for OpenSearch
# --------------------------------------------------------------------------
resource "aws_iam_policy" "allow_opensearch_pass_role" {
  name        = "allow-opensearch-pass-role"
  description = "Allow passing role to OpenSearch for snapshots"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect   = "Allow"
        Action   = "iam:PassRole"
        Resource = aws_iam_role.opensearch_snapshot_role.arn
      }
    ]
  })
}

# Attach the policy to relevant groups
resource "aws_iam_group_policy_attachment" "gxc_developer_pass_role" {
  group      = var.group_awscloud_developer
  policy_arn = aws_iam_policy.allow_opensearch_pass_role.arn
}

resource "aws_iam_group_policy_attachment" "gxc_administrator_pass_role" {
  group      = var.group_awscloud_administrator
  policy_arn = aws_iam_policy.allow_opensearch_pass_role.arn
}

resource "aws_iam_group_policy_attachment" "gxc_billing_pass_role" {
  group      = var.group_awscloud_billing
  policy_arn = aws_iam_policy.allow_opensearch_pass_role.arn
}